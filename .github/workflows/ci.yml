name: CI/CD Pipeline v2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Test single version - 2025-07-17
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Debug matrix
      run: |
        echo "Python version: ${{ matrix.python-version }}"
        echo "Matrix: ${{ toJSON(matrix) }}"
        echo "Job name: ${{ github.job }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run linting
      run: |
        flake8 xlsx2md tests
        black --check xlsx2md tests
        mypy xlsx2md --ignore-missing-imports

    - name: Run tests with coverage
      run: |
        pytest --cov=xlsx2md --cov-report=term-missing

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  example-generation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Debug matrix
      run: |
        echo "Python version: ${{ matrix.python-version }}"
        echo "Matrix: ${{ toJSON(matrix) }}"
        echo "Job name: ${{ github.job }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl

    - name: Generate example files
      run: python docs/examples/generate_examples.py

    - name: Verify example files
      run: |
        ls -la docs/examples/
        test -f docs/examples/sample_data.xlsx
        test -f docs/examples/sales_report.xlsx
        test -f docs/examples/inventory.xlsx

    - name: Test CLI with examples
      run: |
        pip install -e .
        xlsx2md docs/examples/users.csv --output test_output.md
        test -f test_output.md
        xlsx2md docs/examples/sample_data.xlsx --list-sheets
